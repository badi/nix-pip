* Status

  Under development, *unstable*

* Goal

  Automatically and painlessly (as possible) derive Nix package sets
  for python dependencies.

* Usage

  - =pip2nix= generates the Nix expressions from the current loaded python environment
  - =pip2nix -r requirements.txt= uses the requirements specified in the given file
  - =pip2nix -p foo -p bar= will generate requirement sets to allow
    installation of packages =foo= and =bar=
  - =pip2nix -p foo -s cryptography packaging -i cryptography openssl
    -i cffi libffi= This generates derivations for =foo= and it's
    dependencies. Two of the depencencies are =cryptography= and
    =cffi= which respectively depend on =openssl= and =libffi=.

  This will generate =requirements.nix=

* Assumptions

  This is intended to be used for projects which can already be
  installed using =pip=.

* Requirements

  - Python
    See [[file:requirements.open][requirements.open]] for the python dependencies
  - Nix+Nixpkgs
    A version of nixpkgs *after* 2017-02-17 is required due to the use of =fetchPyPI=.
    See [[file:pip2nix/data/nixpkgs.nix][nixpkgs.nix]]

* Procedure

  1. Determine package dependency graph by using =pip install= in a
     bare python environment and pruning child dependencies to
     determine transitive dependencies.
  2. Query the PyPi api for each package and pin to the frozen version.
  3. Generate the Nix derivation set
